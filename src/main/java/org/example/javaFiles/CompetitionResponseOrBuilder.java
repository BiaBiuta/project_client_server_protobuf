// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: competition.proto
package org.example.javaFiles;
// Protobuf Java Version: 4.26.1
public interface CompetitionResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:CompetitionResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.CompetitionResponse.Type_Response type_Response = 2;</code>
   * @return The enum numeric value on the wire for typeResponse.
   */
  int getTypeResponseValue();
  /**
   * <code>.CompetitionResponse.Type_Response type_Response = 2;</code>
   * @return The typeResponse.
   */
  CompetitionResponse.Type_Response getTypeResponse();

  /**
   * <code>.RegistrationDTO registration = 3;</code>
   * @return Whether the registration field is set.
   */
  boolean hasRegistration();
  /**
   * <code>.RegistrationDTO registration = 3;</code>
   * @return The registration.
   */
  RegistrationDTO getRegistration();
  /**
   * <code>.RegistrationDTO registration = 3;</code>
   */
  RegistrationDTOOrBuilder getRegistrationOrBuilder();

  /**
   * <code>string error = 14;</code>
   * @return The error.
   */
  java.lang.String getError();
  /**
   * <code>string error = 14;</code>
   * @return The bytes for error.
   */
  com.google.protobuf.ByteString
      getErrorBytes();

  /**
   * <code>.OrganizingDTO organizing_resp = 1;</code>
   * @return Whether the organizingResp field is set.
   */
  boolean hasOrganizingResp();
  /**
   * <code>.OrganizingDTO organizing_resp = 1;</code>
   * @return The organizingResp.
   */
  OrganizingDTO getOrganizingResp();
  /**
   * <code>.OrganizingDTO organizing_resp = 1;</code>
   */
  OrganizingDTOOrBuilder getOrganizingRespOrBuilder();

  /**
   * <code>.OrganizingDTO organizing_resp2 = 4;</code>
   * @return Whether the organizingResp2 field is set.
   */
  boolean hasOrganizingResp2();
  /**
   * <code>.OrganizingDTO organizing_resp2 = 4;</code>
   * @return The organizingResp2.
   */
  OrganizingDTO getOrganizingResp2();
  /**
   * <code>.OrganizingDTO organizing_resp2 = 4;</code>
   */
  OrganizingDTOOrBuilder getOrganizingResp2OrBuilder();

  /**
   * <code>repeated .SampleDTO samples_res = 5;</code>
   */
  java.util.List<SampleDTO> 
      getSamplesResList();
  /**
   * <code>repeated .SampleDTO samples_res = 5;</code>
   */
  SampleDTO getSamplesRes(int index);
  /**
   * <code>repeated .SampleDTO samples_res = 5;</code>
   */
  int getSamplesResCount();
  /**
   * <code>repeated .SampleDTO samples_res = 5;</code>
   */
  java.util.List<? extends SampleDTOOrBuilder> 
      getSamplesResOrBuilderList();
  /**
   * <code>repeated .SampleDTO samples_res = 5;</code>
   */
  SampleDTOOrBuilder getSamplesResOrBuilder(
      int index);

  /**
   * <code>.OrganizingDTO organizing = 6;</code>
   * @return Whether the organizing field is set.
   */
  boolean hasOrganizing();
  /**
   * <code>.OrganizingDTO organizing = 6;</code>
   * @return The organizing.
   */
  OrganizingDTO getOrganizing();
  /**
   * <code>.OrganizingDTO organizing = 6;</code>
   */
  OrganizingDTOOrBuilder getOrganizingOrBuilder();

  /**
   * <code>.SampleDTO sample = 7;</code>
   * @return Whether the sample field is set.
   */
  boolean hasSample();
  /**
   * <code>.SampleDTO sample = 7;</code>
   * @return The sample.
   */
  SampleDTO getSample();
  /**
   * <code>.SampleDTO sample = 7;</code>
   */
  SampleDTOOrBuilder getSampleOrBuilder();

  /**
   * <code>repeated .ChildDTO children = 8;</code>
   */
  java.util.List<ChildDTO> 
      getChildrenList();
  /**
   * <code>repeated .ChildDTO children = 8;</code>
   */
  ChildDTO getChildren(int index);
  /**
   * <code>repeated .ChildDTO children = 8;</code>
   */
  int getChildrenCount();
  /**
   * <code>repeated .ChildDTO children = 8;</code>
   */
  java.util.List<? extends ChildDTOOrBuilder> 
      getChildrenOrBuilderList();
  /**
   * <code>repeated .ChildDTO children = 8;</code>
   */
  ChildDTOOrBuilder getChildrenOrBuilder(
      int index);

  /**
   * <code>.ChildDTO child = 9;</code>
   * @return Whether the child field is set.
   */
  boolean hasChild();
  /**
   * <code>.ChildDTO child = 9;</code>
   * @return The child.
   */
  ChildDTO getChild();
  /**
   * <code>.ChildDTO child = 9;</code>
   */
  ChildDTOOrBuilder getChildOrBuilder();

  /**
   * <code>.New new = 12;</code>
   * @return Whether the new field is set.
   */
  boolean hasNew();
  /**
   * <code>.New new = 12;</code>
   * @return The new.
   */
  New getNew();
  /**
   * <code>.New new = 12;</code>
   */
  NewOrBuilder getNewOrBuilder();

  /**
   * <code>.ChildDTO child_saved = 10;</code>
   * @return Whether the childSaved field is set.
   */
  boolean hasChildSaved();
  /**
   * <code>.ChildDTO child_saved = 10;</code>
   * @return The childSaved.
   */
  ChildDTO getChildSaved();
  /**
   * <code>.ChildDTO child_saved = 10;</code>
   */
  ChildDTOOrBuilder getChildSavedOrBuilder();

  /**
   * <code>string number = 13;</code>
   * @return The number.
   */
  java.lang.String getNumber();
  /**
   * <code>string number = 13;</code>
   * @return The bytes for number.
   */
  com.google.protobuf.ByteString
      getNumberBytes();
}
